<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>编辑博客的注释</title>
      <link href="/2023/10/13/%E7%BC%96%E8%BE%91%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%B3%A8%E9%87%8A/"/>
      <url>/2023/10/13/%E7%BC%96%E8%BE%91%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%B3%A8%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E6%93%8D%E4%BD%9C.jpg" alt="图片" title="操作"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建网站前置知识</title>
      <link href="/2023/10/12/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/12/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h1><h1 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h1><ol><li>Nodejs是Javascript一个<strong>运行环境</strong>，有了Nodejs，Javascript也可以在<strong>非浏览器端</strong>进行运行。传统上 Web 开发者，前端用 JS 写，但是写服务器端代码的时候还必须用另外一种语言。但是 Node.js 出现之后，JS 前后通吃了，执行 node 命令，就可以进入 Node.js 的交互环境。ctrl＋D退出</li><li>也可以把代码写入文件中app.js,<br>console.log(“hello”);</li><li>npm是软件包仓库Node Package Manage，安装好了 Node.js 之后，就会配套安装一个命令，叫做 npm 。<br>执行 <code>npm install moment</code> 就可以把 <code>moment</code> 这个包从 npm 的软件包仓库中下载这个包，然后安装到本地了。而 npm 的软件包仓库中，有数以万计的 moment 这样的包</li></ol><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><p>1.新建文件后_config.yml</p><p>网站的 配置 信息，您可以在此配置大部分的参数。<br>2. _config.yml</p><p>网站的 配置 信息，您可以在此配置大部分的参数。<br>3. ### package.json应用程序的信息。<a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> 渲染引擎 已默认安装，您可以自由移除</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建之失败与失败</title>
      <link href="/2023/10/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/10/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h1><h1 id="失败与失败"><a href="#失败与失败" class="headerlink" title="失败与失败"></a>失败与失败</h1><ol><li>利用hexo和github、 开始使用ubuntu，失败 权限太麻烦了 换回windows 下载nodejs git hexo 下载模板# <a href="https://argvchs.github.io/2022/05/10/hexo-theme-particlex/">ParticleX</a></li><li>搭建完成，进行各项属性配置。<a href="https://negisa.github.io/">入口</a><br>接下来：</li><li>修改了头像与背景</li><li>增加了友情链接</li><li>缺少图标，采用# fontawesome，增加了iconlink</li><li>显然，经历一系列尝试后，我的系统爆了，也不知道哪里有问题，只有删除重装</li><li>再次尝试，使用了butterfly主题</li></ol><h1 id="正式搭建"><a href="#正式搭建" class="headerlink" title="正式搭建"></a>正式搭建</h1><p>1.进行Vercel部署，部署后发现我没有自定义购买，放弃,以后用吧<br>2.进行了标签的添加，产生了疑问，如何部署图片到网站，进入html的学习<br>3.大标题前面图标的疑问，文章封面的疑问</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言学习</title>
      <link href="/2023/10/12/C%20%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/10/12/C%20%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h1><hr><ol><li>整数进行运算，结果只能为整数</li><li>double双精度float单精度</li><li>%d %f %lf</li><li>%代表取余数</li></ol><h1 id="if与case-语句‘"><a href="#if与case-语句‘" class="headerlink" title="if与case 语句‘"></a>if与case 语句‘</h1><ol><li>if后必须在括号完后再来else，else必定有一对括号</li><li>等于是&#x3D;&#x3D; 而不是&#x3D;</li><li>且&amp;&amp;</li><li>或||</li><li>！非，不能写成1&lt;a&lt;b的形式</li><li>case后面要带<strong>冒号：</strong></li><li></li></ol><p>ctrl加f搜索单词</p><pre><code class="if">   &#123;    hour2=hour1;    if (hour2== %%12)    &#123;        printf(&quot;Equivalent 12-hour time:%d:%02d PM&quot;,hour2,min);    &#125;        else    &#123;        printf(&quot;Equivalent 12-hour time:%d:%02d AM&quot;,hour2,min);      &#125;   &#125;   else if (hour1&gt;12)    &#123;        hour2=hour1-12;      printf(&quot;Equivalent 12-hour time:%d:%02d PM&quot;,hour2,min);    &#125;    else    &#123;      printf(&quot;Equivalent 12-hour time:%d:%02d AM&quot;,12,min);    &#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/10/hello-world/"/>
      <url>/2023/10/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux学习</title>
      <link href="/2023/09/21/%EF%BD%8C%EF%BD%89%EF%BD%8E%EF%BD%95%EF%BD%98%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/09/21/%EF%BD%8C%EF%BD%89%EF%BD%8E%EF%BD%95%EF%BD%98%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a>变量名</h1><blockquote><p>狠狠开始 括号里面是一些废话</p></blockquote><p><font size="6">括号里面是一些废话</font></p><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><p>ls  &#x2F;home&#x2F;mio<br>ls代表list 作为展开目录<br>ls-l 可以更详细展开<br>pwd查看当前目录<br>apt update更新软件缓存<br>apt install安装程序<br>软件名 -help可以看用法</p><h1 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h1><p>这个内核最初被称为“Freax”。他最初的目标只是想学习操作系统内核的开发，并为自己的个人计算机编写一个操作系统。他将这个内核发布在Internet上，并开放源代码。随着全球各地的程序员参与开发，内核变得更加完善和稳定。这个内核最终被命名为Linux（Linus和Unix的组合）<a href="https://baijiahao.baidu.com/s?id=1762439859145222616&wfr=spider&for=pc">参考</a></p><h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><p><font color="blue">开源 安全 多用户 权限设置比较严防止乱搞 人工智能领域涉及较多</font><br><a href="https://baijiahao.baidu.com/s?id=1761124366165576668&wfr=spider&for=pc">参考</a><br>（权限真的挺严，感觉图标比较少，我在微机课电脑上发现配好了的，估计以后要学）</p><h1 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h1><p>包管理器又称软件包管理系统，它是在电脑中自动安装、配制、卸载和升级<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%8C%85?fromModule=lemma_inlink">软件包</a>的工具组合，在各种<a href="https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6?fromModule=lemma_inlink">系统软件</a>和<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E8%BD%AF%E4%BB%B6?fromModule=lemma_inlink">应用软件</a>的安装管理中均有广泛应用。<br>在Linux发行版中，几乎每一个发行版都有自己的包管理器。我的是apt<br>（类似于手机应用商店？）<br>用户通常使用包管理器来搜索和安装相关的软件包。用户可以输入包的名称，然后搜索可用的软件包，如果找到，这些包管理器就会自动下载并安装它们，如果安装程序需要它，也会安装它们的依赖关系，这可以节省用户大量时间。</p><h1 id="换源更新"><a href="#换源更新" class="headerlink" title="换源更新"></a>换源更新</h1><p><a href="https://blog.csdn.net/qq_45878098/article/details/126037838">参考</a></p><h1 id="初步使用"><a href="#初步使用" class="headerlink" title="初步使用"></a>初步使用</h1><h2 id="安装gcc"><a href="#安装gcc" class="headerlink" title="安装gcc"></a>安装gcc</h2><h2 id="使用vim"><a href="#使用vim" class="headerlink" title="使用vim"></a>使用vim</h2><p>光标移动使用hjkl左上下右<br>4h向左四格<br>w到达下一个单词b到达上一个单词<br>f为find fm会把光标移到离你最近的m<br>ctrl加d向下移 加u上移<br>gg回到开头<br>GG为最下方<br>:w 保存文件但不退出vi<br>:w file 将修改另外保存到file中，不退出vi<br>:w! 强制保存，不推出vi<br>:wq 保存文件并退出vi<br>:wq! 强制保存文件，并退出vi<br>:q 不保存文件，退出vi<br>:q! 不保存文件，强制退出vi<br>:e! 放弃所有修改，从上次保存文件开始再编辑命令历史<br>参考<a href="https://blog.csdn.net/feosun/article/details/73196299">zhewei</a><br><a href="https://blog.csdn.net/Lov1_BYS/article/details/127734183">two</a><br><a href="https://zhuanlan.zhihu.com/p/636888896">three</a></p><h1 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h1><h1 id="ctrl加h才能看到整个目录！！"><a href="#ctrl加h才能看到整个目录！！" class="headerlink" title="ctrl加h才能看到整个目录！！"></a>ctrl加h才能看到整个目录！！</h1><ol><li>创建vim 文件名.c</li><li>编码</li><li>：wq退出</li><li>gcc hello.c -o hello编译</li><li>运行</li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
